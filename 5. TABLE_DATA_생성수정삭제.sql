-- DML(DATA MANIPULATION LANGUGE): INSERT(행추가), UPDATA(행데이터수정), DELETE(행삭제), SELECT

DESC DEPT01;
SELECT * FROM DEPT01;
CREATE TABLE DEPT01(
    DEPTNO NUMBER(4),
    DNAME VARCHAR(20),
    LOC VARCHAR(20)
);
INSERT INTO DEPT01(DEPTNO, DNAME, LOC) VALUES(10, 'ACCOUNTING', 'NEW YORK');
-- TABLE 이름 다음에 나오는 속성 갯수와 VALUES 다음에 나오는 속성 값의 순서와 데이터타입이 일치
INSERT INTO DEPT01(DNAME, DEPTNO, LOC) VALUES('HR', 20, 'BOSTON');  -- DEPT01()과 VALUES()의 값의 데이터타입 일치해야함
INSERT INTO DEPT01(DNAME, DEPTNO, LOC) VALUES(20, 'SALES', 'LA', 50); -- 속성 갯수도 정확하게 일치해야함
INSERT INTO DEPT01(DEPTNO, DNAME, LOC) VALUES(30, 'SALES', 50);
DELETE FROM DEPT01 WHERE deptno=30;  -- 행 삭제

-- TABLE이름 다음에 속성 값을 설정안해도 됨. 단, SELECT할 때 나오는 속성이름 순서대로 VALUES의 속성값을 넣어야함
INSERT INTO DEPT01 VALUES(30, 'SALES', 'LA');

-- 속성 값으로 NULL 입력하기
DESC DEPT;
SELECT * FROM DEPT;
-- PRIMARY KEY입력시 NOT NULL됨
ALTER TABLE DEPT MODIFY(DEPTNO NUMBER(2) PRIMARY KEY);

-- INSERT INTO~~
DESC DEPT01;
SELECT * FROM DEPT01;
-- INSERT를 할 때, 해당 속성 값을 제외하면, INSERT결과로 해당 속성값이 NULL로 할당됨
INSERT INTO DEPT01(deptno, dname) VALUES (40, 'OPERATIONS');
-- INSERT를 할 때, 해당 속성 값을 직접 NULL입력시, INSERT결과로 해당 속성값이 NULL로 할당됨
INSERT INTO DEPT01(deptno, dname, loc) VALUES (50, 'OP2', NULL);
INSERT INTO DEPT01(deptno, dname, loc) VALUES (60, 'OP2', ''); -- ''도 가능(그래도 NULL을 명시해주면 좋음)

-- 서브쿼리로 데이터 삽입하기
DROP TABLE DEPT01;
CREATE TABLE DEPT01 AS SELECT * FROM DEPT WHERE 1=0;
INSERT INTO DEPT01 SELECT * FROM DEPT;
SELECT * FROM DEPT01;

-- SUBQUERY 사용해서 EMP TABLE의 DEPTNO가 10인 것만 INSERT
CREATE TABLE EMP01 AS SELECT * FROM EMP WHERE 1=0;
INSERT INTO EMP01 SELECT * FROM EMP WHERE deptno=10;

-- INSERT ALL INTO 테이블명 VALUES(~~) INTO 테이블명 VALUES(~~) SELECT~~ 명령어로 다중 테이블에 다중행 입력하기
CREATE TABLE EMP_HR AS SELECT EMPNO, ENAME, HIREDATE FROM EMP WHERE 1=0;
CREATE TABLE EMP_MGR AS SELECT EMPNO, ENAME, MGR FROM EMP WHERE 1=0;
INSERT All INTO EMP_HR VALUES(EMPNO, ENAME, HIREDATE) INTO EMP_MGR VALUES(EMPNO, ENAME, MGR) SELECT EMPNO, ENAME, HIREDATE, MGR FROM EMP WHERE DEPTNO=20;
SELECT * FROM EMP_HR;
SELECT * FROM EMP_MGR;

-- INSERT ALL 2번째 예 (WHEN 사용)
CREATE TABLE EMP_HR02 AS SELECT EMPNO, ENAME, HIREDATE FROM EMP WHERE 1=0;
CREATE TABLE EMP_SAL AS SELECT EMPNO, ENAME, SAL FROM EMP WHERE 1=0;
INSERT ALL
WHEN HIREDATE > '1982/01/01' THEN
INTO EMP_HR02 VALUES (EMPNO, ENAME, HIREDATE)
WHEN SAL > 2000 THEN
INTO EMP_SAL VALUES(EMPNO, ENAME, SAL)
SELECT EMPNO, ENAME, HIREDATE, SAL FROM EMP;

-- UPDATE: TABLE 행의 속성 값 수정
SELECT * FROM EMP01;
TRUNCATE TABLE EMP01;

INSERT INTO EMP01 SELECT * FROM EMP;
UPDATE EMP01 SET DEPTNO=30;
-- 모든 사원의 급여를 10%인상
UPDATE EMP01 SET SAL=SAL*1.1;
-- 모든 사원의 입사일자를 오늘로 수정
UPDATE EMP01 SET hiredate=SYSDATE;

ROLLBACK;

INSERT INTO EMP01 SELECT * FROM EMP;
COMMIT;
-- 특정 행만 수정하는 것이 일반적: WHERE 사용
UPDATE EMP01 SET DEPTNO=30 WHERE DEPTno=10;
-- 급여가 3000이상만 10% 인상
UPDATE EMP01 SET SAL=SAL*1.1 WHERE sal>=3000;
-- 83년 입사자만 입사일을 오늘로 변경
UPDATE EMP01 SET HIREDATE=SYSDATE WHERE SUBSTR(HIREDATE, 1, 2)='83';

ROLLBACK;
-- SCOTT 사원의 부서코드를 30으로 변경, JOB을 MANAGER로 변경  (AND가 아닌 ,(콤마)로 포함)
UPDATE EMP01 SET deptno=30, job='MANAGER' WHERE ename='SCOTT';
-- SCOTT 사원의 입사일자를 오늘, 급여를 200인상, 커미션을 2000으로 변경
UPDATE EMP01 SET HIREDATE=SYSDATE, SAL=SAL+200, COMM=2000 WHERE ename='SCOTT';

--SUBQUERY를 사용하여 UPDATE
SELECT * FROM DEPT01;
UPDATE DEPT01 SET LOC=(SELECT LOC FROM DEPT01 WHERE DEPTNO=40) WHERE DEPTNO=20;

-- DELETE: TABLE의 행을 삭제
DELETE FROM DEPT01; -- 모든행 삭제
SELECT * FROM DEPT01;
ROLLBACK;

-- 부서코드가 30인 행만 삭제
DELETE FROM DEPT01 WHERE deptno=30;

SELECT * FROM EMP01;
DELETE FROM EMP01 WHERE COMM IS NULL AND SAL <= 1000; 

-- SUBQUERY를 사용하여 삭제
DELETE FROM EMP01 WHERE DEPTNO = (SELECT DEPTNO FROM DEPT WHERE dname='SALES');